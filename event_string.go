// Code generated by "stringer -linecomment=true -type=EventType,Transport,Family,FileType,FileChangeType -output=event_string.go"; DO NOT EDIT.

package ebpfevents

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EventTypeProcessFork-2]
	_ = x[EventTypeProcessExec-4]
	_ = x[EventTypeProcessExit-8]
	_ = x[EventTypeProcessSetsid-16]
	_ = x[EventTypeProcessSetuid-32]
	_ = x[EventTypeProcessSetgid-64]
	_ = x[EventTypeProcessTTYWrite-128]
	_ = x[EventTypeFileDelete-256]
	_ = x[EventTypeFileCreate-512]
	_ = x[EventTypeFileRename-1024]
	_ = x[EventTypeFileModify-2048]
	_ = x[EventTypeNetworkConnectionAccepted-4096]
	_ = x[EventTypeNetworkConnectionAttempted-8192]
	_ = x[EventTypeNetworkConnectionClosed-16384]
}

const _EventType_name = "ProcessForkProcessExecProcessExitProcessSetsidProcessSetuidProcessSetgidProcessTTYWriteFileDeleteFileCreateFileRenameFileModifyNetConnectionAcceptedNetConnectionAttemptedNetConnectionClosed"

var _EventType_map = map[EventType]string{
	2:     _EventType_name[0:11],
	4:     _EventType_name[11:22],
	8:     _EventType_name[22:33],
	16:    _EventType_name[33:46],
	32:    _EventType_name[46:59],
	64:    _EventType_name[59:72],
	128:   _EventType_name[72:87],
	256:   _EventType_name[87:97],
	512:   _EventType_name[97:107],
	1024:  _EventType_name[107:117],
	2048:  _EventType_name[117:127],
	4096:  _EventType_name[127:148],
	8192:  _EventType_name[148:170],
	16384: _EventType_name[170:189],
}

func (i EventType) String() string {
	if str, ok := _EventType_map[i]; ok {
		return str
	}
	return "EventType(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TransportTCP-1]
}

const _Transport_name = "TCP"

var _Transport_index = [...]uint8{0, 3}

func (i Transport) String() string {
	i -= 1
	if i >= Transport(len(_Transport_index)-1) {
		return "Transport(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Transport_name[_Transport_index[i]:_Transport_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AFInet-1]
	_ = x[AFInet6-2]
}

const _Family_name = "InetInet6"

var _Family_index = [...]uint8{0, 4, 9}

func (i Family) String() string {
	i -= 1
	if i >= Family(len(_Family_index)-1) {
		return "Family(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Family_name[_Family_index[i]:_Family_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FileTypeUnknown-0]
	_ = x[FileTypeFile-1]
	_ = x[FileTypeDir-2]
	_ = x[FileTypeSymlink-3]
	_ = x[FileTypeCharDevice-4]
	_ = x[FileTypeBlockDevice-5]
	_ = x[FileTypeNamedPipe-6]
	_ = x[FileTypeSocket-7]
}

const _FileType_name = "UnknownFileDirSymlinkCharDeviceBlockDeviceNamedPipeSocket"

var _FileType_index = [...]uint8{0, 7, 11, 14, 21, 31, 42, 51, 57}

func (i FileType) String() string {
	if i >= FileType(len(_FileType_index)-1) {
		return "FileType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FileType_name[_FileType_index[i]:_FileType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FileChangeTypeUnknown-0]
	_ = x[FileChangeTypeContent-1]
	_ = x[FileChangeTypePermissions-2]
	_ = x[FileChangeTypeOwner-3]
	_ = x[FileChangeTypeXattrs-4]
}

const _FileChangeType_name = "UnknownContentPermissionsOwnerXattrs"

var _FileChangeType_index = [...]uint8{0, 7, 14, 25, 30, 36}

func (i FileChangeType) String() string {
	if i >= FileChangeType(len(_FileChangeType_index)-1) {
		return "FileChangeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FileChangeType_name[_FileChangeType_index[i]:_FileChangeType_index[i+1]]
}
